#version 450
layout (quads, equal_spacing,ccw) in;
uniform float anim_time;
out vec3 normal;
//uuniform mat4 model_view_matrix;
//uniform mat4 projection_matrix;
/*mat4 model_view_matrix = mat4(
			      0.30902, 0.0, -0.95106, 0.00000,
			      -0.40494, 0.90423, -0.13157, 0.00000,
			      0.86055, 0.42578, -0.27961, -25,
			      0.00000, 0.00000, 0.0000, 0.00000);
mat4 projection_matrix = mat4(
			      1, 0.00000, 0.00000, 0.00000,
			      0.00000, 1, 0.00000, 0.00000,
			      0.00000, 0.00000, -1.000202, -1.01010,
			      0.00000, 0.00000, -1.00000, 0.00000);*/
					mat4 model_view_matrix = mat4(
									      0.57735, -0.33333, 0.57735, 0.00000,
									      0.00000, 0.66667, 0.57735, 0.00000,
									      -0.57735, -0.33333, 0.57735, 0.00000,
									      0.00000, 0.00000, -17, 1.00000);
						mat4 projection_matrix = mat4(
									      15.00000, 0.00000, 0.00000, 0.00000,
									      0.00000, 15.00000, 0.00000, 0.00000,
									      0.00000, 0.00000, -1.00020, -1.00000,
									      0.00000, 0.00000, -10.00100, 0.00000);
void main() {
vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);
vec4 p2= mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);
vec4 p =mix(p1,p2,gl_TessCoord.y);
p.y+=0.05*cos(15.0*dot(gl_TessCoord.xy,vec2(1.0,0.5))-anim_time);
p.y+=0.05*cos(10.0*dot(gl_TessCoord.xy,vec2(0.9,0.4))-anim_time);
p.y+=0.05*cos(10.0*dot(gl_TessCoord.xy,vec2(-0.9,0.3))-anim_time);
gl_Position=projection_matrix*model_view_matrix*p;
float diff_x = -0.05*15.0*sin(15.0*dot(gl_TessCoord.xy,vec2(1.0,0.5))-anim_time)-0.05*10.0*0.9*cos(10.0*dot(gl_TessCoord.xy,vec2(0.9,0.4))-anim_time)+0.05*10.0*0.9*cos(10.0*dot(gl_TessCoord.xy,vec2(0.9,0.4))-anim_time);
float diff_z = -0.05*15.0*0.5*sin(15.0*dot(gl_TessCoord.xy,vec2(1.0,0.5))-anim_time)-0.05*10.0*0.9*0.4*cos(10.0*dot(gl_TessCoord.xy,vec2(0.9,0.4))-anim_time)-0.05*10.0*0.9*0.3*cos(10.0*dot(gl_TessCoord.xy,vec2(0.9,0.4))-anim_time);
normal = normalize(cross(vec3(1.0,diff_x,0.0),vec3(0.0,diff_z,1.0)));
}
